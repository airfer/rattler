
diff --git a/sandbox-core/src/main/java/com/alibaba/jvm/sandbox/core/CoreConfigure.java b/sandbox-core/src/main/java/com/alibaba/jvm/sandbox/core/CoreConfigure.java
index a6f654a..9b5a80c 100755
--- a/sandbox-core/src/main/java/com/alibaba/jvm/sandbox/core/CoreConfigure.java
+++ b/sandbox-core/src/main/java/com/alibaba/jvm/sandbox/core/CoreConfigure.java
@@ -55,7 +55,7 @@ public class CoreConfigure {
 
     // 从配置文件中合并配置到CoreConfigure中
     private static CoreConfigure mergePropertiesFile(final CoreConfigure cfg, final String propertiesFilePath) {
-        cfg.featureMap.putAll(propertiesToStringMap(fetchProperties(propertiesFilePath)));
+        cfg.featureMap.putAll(propertiesToStringMap(cfg,fetchProperties(propertiesFilePath)));
         return cfg;
     }
 
@@ -75,12 +75,12 @@ public class CoreConfigure {
     }
 
     // 配置转map
-    private static Map<String, String> propertiesToStringMap(final Properties properties) {
+    private static Map<String, String> propertiesToStringMap(CoreConfigure cfg,final Properties properties) {
         final Map<String, String> map = new HashMap<String, String>();
         for (String key : properties.stringPropertyNames()) {
 
-            // 过滤掉受保护的key
-            if (ArrayUtils.contains(PROTECT_KEY_ARRAY, key)) {
+            //如果受保护的key已经由入参指定，则过滤掉受保护的key,防止入参被覆盖
+            if (cfg.featureMap.containsKey(key) && ArrayUtils.contains(PROTECT_KEY_ARRAY, key)) {
                 continue;
             }
 
diff --git a/sandbox-core/src/main/java/com/alibaba/jvm/sandbox/core/server/jetty/servlet/ModuleHttpServlet.java b/sandbox-core/src/main/java/com/alibaba/jvm/sandbox/core/server/jetty/servlet/ModuleHttpServlet.java
index 5d9df55..b78af49 100755
--- a/sandbox-core/src/main/java/com/alibaba/jvm/sandbox/core/server/jetty/servlet/ModuleHttpServlet.java
+++ b/sandbox-core/src/main/java/com/alibaba/jvm/sandbox/core/server/jetty/servlet/ModuleHttpServlet.java
@@ -32,7 +32,7 @@ import static com.alibaba.jvm.sandbox.api.util.GaStringUtils.matching;
  * Created by luanjia@taobao.com on 2017/2/7.
  */
 public class ModuleHttpServlet extends HttpServlet {
-    private static final String SLASH = "/";
+
     private final Logger logger = LoggerFactory.getLogger(getClass());
 
     private final CoreModuleManager coreModuleManager;
@@ -179,39 +179,29 @@ public class ModuleHttpServlet extends HttpServlet {
             if (null == commandAnnotation) {
                 continue;
             }
-            // 兼容 value 是否以 / 开头的写法
-            String cmd = appendSlash(commandAnnotation.value());
-            final String pathOfCmd = "/" + uniqueId + cmd;
+            final String pathOfCmd = "/" + uniqueId + "/" + commandAnnotation.value();
             if (StringUtils.equals(path, pathOfCmd)) {
                 return method;
             }
         }
+
         // 查找@Http注解的方法
         for (final Method method : MethodUtils.getMethodsListWithAnnotation(classOfModule, Http.class)) {
             final Http httpAnnotation = method.getAnnotation(Http.class);
             if (null == httpAnnotation) {
                 continue;
             }
-            // 兼容 value 是否以 / 开头的写法
-            String cmd = appendSlash(httpAnnotation.value());
-            final String pathPattern = "/" + uniqueId + cmd;
+            final String pathPattern = "/" + uniqueId + httpAnnotation.value();
             if (ArrayUtils.contains(httpAnnotation.method(), httpMethod)
                     && matching(path, pathPattern)) {
                 return method;
             }
         }
+
         // 找不到匹配方法，返回null
         return null;
     }
 
-    private String appendSlash(String cmd) {
-        // 若不以 / 开头，则添加 /
-        if (!cmd.startsWith(SLASH)) {
-            cmd = SLASH + cmd;
-        }
-        return cmd;
-    }
-
     private boolean isMapWithGenericParameterTypes(final Method method,
                                                    final int parameterIndex,
                                                    final Class<?> keyClass,